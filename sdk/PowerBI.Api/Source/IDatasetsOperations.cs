// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// DatasetsOperations operations.
    /// </summary>
    public partial interface IDatasetsOperations
    {
        /// <summary>
        /// Returns a list of datasets from **My workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<Datasets>> GetDatasetsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new dataset on **My workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// This API call only supports **push datasets**.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='dataset'>
        /// Dataset definition to create
        /// </param>
        /// <param name='defaultRetentionPolicy'>
        /// The default retention policy. Possible values include: 'None',
        /// 'basicFIFO'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Dataset>> PostDatasetWithHttpMessagesAsync(CreateDatasetRequest dataset, DefaultRetentionPolicy? defaultRetentionPolicy = default(DefaultRetentionPolicy?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns the specified dataset from **My workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Dataset>> GetDatasetWithHttpMessagesAsync(string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the properties for the specified dataset from **My
        /// workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// The user must be the dataset owner.
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='updateDatasetRequest'>
        /// Update dataset request parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> UpdateDatasetWithHttpMessagesAsync(string datasetId, UpdateDatasetRequest updateDatasetRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes the specified dataset from **My workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> DeleteDatasetWithHttpMessagesAsync(string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Executes Data Analysis Expressions (DAX) queries against the
        /// provided dataset. The dataset must reside in **My workspace** or
        /// another [new workspace
        /// experience](/power-bi/collaborate-share/service-new-workspaces)
        /// workspace.
        /// </summary>
        /// <remarks>
        ///
        /// DAX query errors will result in:
        ///
        /// - A response error, such as `DAX query failure`.
        /// - A failure HTTP status code (400).
        ///
        /// A query that requests more than one table, or more than the allowed
        /// number of table rows, will result in:
        ///
        /// - Limited data being returned.
        /// - A response error, such as `More than one result table in a query`
        /// or `More than {allowed number} rows in a query result`.
        /// - A successful HTTP status code (200).
        ///
        /// Columns that are fully qualified in the query will be returned with
        /// a fully qualified name, for example, `MyTable[MyColumn]`. Columns
        /// that are renamed or created in the query will be returned within
        /// square bracket, for example, `[MyNewColumn]`.
        ///
        /// ## Permissions
        ///
        /// The user must have [Manage dataset access
        /// permissions](/power-bi/connect-data/service-datasets-manage-access-permissions).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        ///
        /// ## Limitations
        ///
        /// - Only datasets in a [new workspace
        /// experience](/power-bi/collaborate-share/service-new-workspaces)
        /// workspace, that is to say a **V2** workspace, are supported.
        /// - Datasets that are hosted in Azure Analysis Services or that have
        /// a live connection to an on-premises Azure Analysis Services model
        /// aren't supported.
        /// - The tenant setting **Dataset Execute Queries REST API**, found
        /// under **Integration settings**, must be enabled.
        /// - One query per API call.
        /// - One table request per query.
        /// - Maximum of 100,000 rows or 1,000,000 values per query (whichever
        /// is hit first). For example if you query for 5 columns, you can get
        /// back max 100,000 rows. If you query for 20 columns, you can get
        /// back max 50,000 rows (1 million divided by 20).
        /// - Maximum of 15MB of data per query. Once 15MB is exceeded, the
        /// current row will be completed but no additional rows will be
        /// written.
        /// - Maximum of 120 requests per user per minute. Target dataset does
        /// not impact this rate limit.
        /// - Service Principals aren't supported for datasets with RLS per
        /// [RLS
        /// limitations](/power-bi/admin/service-admin-rls#considerations-and-limitations)
        /// or with SSO enabled.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='requestMessage'>
        /// The request message
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<DatasetExecuteQueriesResponse>> ExecuteQueriesWithHttpMessagesAsync(string datasetId, DatasetExecuteQueriesRequest requestMessage, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of tables within the specified dataset from **My
        /// workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        ///
        /// ## Limitations
        ///
        /// This API call only supports **push datasets**.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Tables>> GetTablesWithHttpMessagesAsync(string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the metadata and schema for the specified table within the
        /// specified dataset from **My workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// This API call only supports **push datasets**.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='tableName'>
        /// The table name
        /// </param>
        /// <param name='requestMessage'>
        /// Table name and columns to update existing table
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Table>> PutTableWithHttpMessagesAsync(string datasetId, string tableName, Table requestMessage, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Adds new data rows to the specified table within the specified
        /// dataset from **My workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// - This API call only supports **push datasets**.
        /// - See [Power BI REST API
        /// limitations](/power-bi/developer/automation/api-rest-api-limitations).
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='tableName'>
        /// The table name
        /// </param>
        /// <param name='requestMessage'>
        /// The request message
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> PostRowsWithHttpMessagesAsync(string datasetId, string tableName, PostRowsRequest requestMessage, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes all rows from the specified table within the specified
        /// dataset from **My workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// This API call only supports **push datasets**.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='tableName'>
        /// The table name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> DeleteRowsWithHttpMessagesAsync(string datasetId, string tableName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns the refresh history for the specified dataset from **My
        /// workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        ///
        /// ## Limitations
        ///
        /// OneDrive refresh history isn't returned.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='top'>
        /// The requested number of entries in the refresh history. If not
        /// provided, the default is all available entries.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Refreshes>> GetRefreshHistoryWithHttpMessagesAsync(string datasetId, int? top = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Triggers a refresh for the specified dataset from **My workspace**.
        /// An [enhanced refresh](/power-bi/connect-data/asynchronous-refresh)
        /// is triggered only if a request payload other than `notifyOption` is
        /// set.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// - For Shared capacities, a maximum of eight requests per day,
        /// including refreshes executed by using scheduled refresh, can be
        /// initiated.
        /// - For Shared capacities, only `notifyOption` can be specified in
        /// the request body.
        /// - Enhanced refresh is not supported for shared capacities.
        /// - For enhanced refresh, `notifyOption` is not required and must be
        /// excluded from the request body. However, one or more parameters
        /// other than `notifyOption` are required.
        /// - For Premium capacities, the maximum requests per day is only
        /// limited by the available resources in the capacity. If available
        /// resources are overloaded, refreshes are throttled until the load is
        /// reduced. The refresh will fail if throttling exceeds 1 hour.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='datasetRefreshRequest'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<DatasetsRefreshDatasetHeaders>> RefreshDatasetWithHttpMessagesAsync(string datasetId, DatasetRefreshRequest datasetRefreshRequest = default(DatasetRefreshRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns execution details of an [enhanced refresh
        /// operation](/power-bi/connect-data/asynchronous-refresh) for the
        /// specified dataset from **My workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='refreshId'>
        /// The refresh ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<DatasetRefreshDetail>> GetRefreshExecutionDetailsWithHttpMessagesAsync(System.Guid datasetId, System.Guid refreshId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Cancels the specified [enhanced refresh
        /// operation](/power-bi/connect-data/asynchronous-refresh) for the
        /// specified dataset from **My workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='refreshId'>
        /// The refresh ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        Task<HttpOperationResponse> CancelRefreshWithHttpMessagesAsync(System.Guid datasetId, System.Guid refreshId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns the refresh schedule for the specified dataset from **My
        /// workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<RefreshSchedule>> GetRefreshScheduleWithHttpMessagesAsync(string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the refresh schedule for the specified dataset from **My
        /// workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// A request that disables the refresh schedule should contain no
        /// other changes.
        ///
        /// At least one day must be specified. If no times are specified, then
        /// Power BI will use a default single time per day.
        ///
        /// ## Permissions
        ///
        /// The user must be the dataset owner.
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// The limit on the number of time slots per day depends on whether a
        /// [Premium](/power-bi/admin/service-premium-what-is) or Shared
        /// capacity is used.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='datasetModelRefreshScheduleRequest'>
        /// Update Refresh Schedule parameters, by specifying all or some of
        /// the parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> UpdateRefreshScheduleWithHttpMessagesAsync(string datasetId, RefreshScheduleRequest datasetModelRefreshScheduleRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns the refresh schedule for a specified
        /// [DirectQuery](/power-bi/connect-data/desktop-directquery-about) or
        /// [LiveConnection](/power-bi/connect-data/desktop-directquery-about#live-connections)
        /// dataset from **My workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<DirectQueryRefreshSchedule>> GetDirectQueryRefreshScheduleWithHttpMessagesAsync(string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the refresh schedule for a specified
        /// [DirectQuery](/power-bi/connect-data/desktop-directquery-about) or
        /// [LiveConnection](/power-bi/connect-data/desktop-directquery-about#live-connections)
        /// dataset from **My workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// A request should contain either a set of days and times *or* a
        /// valid frequency, but not both. If you choose a set of days without
        /// specifying any times, then Power BI will use a default single time
        /// per day. Setting the frequency will automatically overwrite the
        /// days and times setting.
        ///
        /// ## Permissions
        ///
        /// The user must be the dataset owner.
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='datasetDQRefreshScheduleRequest'>
        /// Patch DirectQuery or LiveConnection Refresh Schedule parameters, by
        /// specifying all or some of the parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> UpdateDirectQueryRefreshScheduleWithHttpMessagesAsync(string datasetId, DirectQueryRefreshScheduleRequest datasetDQRefreshScheduleRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of parameters for the specified dataset from **My
        /// workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.Read.All or Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// Datasets with SQL, Oracle, Teradata, and SAP HANA
        /// [DirectQuery](/power-bi/connect-data/desktop-directquery-about)
        /// connections aren't supported.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<MashupParameters>> GetParametersWithHttpMessagesAsync(string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the parameters values for the specified dataset from **My
        /// workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// &gt; [!NOTE]
        /// &gt; We recommend using [enhanced dataset
        /// metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata)
        /// with this API call.
        ///
        /// &gt; [!IMPORTANT]
        /// &gt;
        /// &gt; - If you're using **enhanced dataset metadata**, refresh the
        /// dataset to apply the new parameter values.
        /// &gt; - If you're not using **enhanced dataset metadata**, wait 30
        /// minutes for the update data sources operation to complete, and then
        /// refresh the dataset.
        ///
        /// ## Permissions
        ///
        /// The user must be the dataset owner.
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// - Datasets created using the public [XMLA
        /// endpoint](/power-bi/admin/service-premium-connect-tools) aren't
        /// supported. To make changes to those data sources, the admin must
        /// use the Azure Analysis Services client library for Tabular Object
        /// Model.
        /// - [DirectQuery](/power-bi/connect-data/desktop-directquery-about)
        /// connections are only supported with [enhanced dataset
        /// metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).
        /// - Datasets with Azure Analysis Services live connections aren't
        /// supported.
        /// - Maximum of 100 parameters per request.
        /// - All specified parameters must exist in the dataset.
        /// - Parameters values should be of the expected type.
        /// - The parameter list can't be empty or include duplicate
        /// parameters.
        /// - Parameters names are case-sensitive.
        /// - Parameter `IsRequired` must have a non-empty value.
        /// - The parameter types `Any` and `Binary` can't be updated.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='updateMashupParametersRequest'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> UpdateParametersWithHttpMessagesAsync(string datasetId, UpdateMashupParametersRequest updateMashupParametersRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of data sources for the specified dataset from **My
        /// workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Datasources>> GetDatasourcesWithHttpMessagesAsync(string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the data sources of the specified dataset from **My
        /// workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// &gt; [!NOTE]
        /// &gt; We recommend using [enhanced dataset
        /// metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata)
        /// with this API call.
        ///
        /// &gt; [!IMPORTANT]
        /// &gt;
        /// &gt; - The original data source and the new data source must have
        /// the exact same schema.
        /// &gt; - If you're using **enhanced dataset metadata**, refresh the
        /// dataset to get data from the new data sources.
        /// &gt; - If you're not using **enhanced dataset metadata**, wait 30
        /// minutes for the update data sources operation to complete, and then
        /// refresh the dataset.
        ///
        /// ## Permissions
        ///
        /// The user must be the dataset owner.
        ///
        /// ## Limitations
        ///
        /// - Datasets created using the public [XMLA
        /// endpoint](/power-bi/admin/service-premium-connect-tools) aren't
        /// supported. To make changes to those data sources, the admin must
        /// use the Azure Analysis Services client library for Tabular Object
        /// Model.
        /// - Only these data sources are supported: SQL Server, Azure SQL
        /// Server, Azure Analysis Services, Azure Synapse, OData, SharePoint,
        /// Teradata, and SAP HANA. For other data sources, use the [Update
        /// Parameters](/rest/api/power-bi/datasets/update-parameters) API
        /// call.
        /// - Changing the data source type isn't supported.
        /// - Data sources that contain parameters in the connection string
        /// aren't supported.
        /// - Updating data sources that are part of merged or joined tables is
        /// only supported if you're using [enhanced dataset
        /// metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).
        /// - For an Advanced Query that references multiple data sources, only
        /// the first data source will be updated. To overcome this limitation,
        /// define the data source as a parameter and use the [Update
        /// Parameters](/rest/api/power-bi/datasets/update-parameters) API
        /// call.
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='updateDatasourcesRequest'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> UpdateDatasourcesWithHttpMessagesAsync(string datasetId, UpdateDatasourcesRequest updateDatasourcesRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates all connections for the specified dataset from **My
        /// workspace**. This API call only supports SQL DirectQuery datasets.
        /// </summary>
        /// <remarks>
        ///
        /// &gt; [!IMPORTANT]
        /// &gt; This API call is deprecated and no longer supported. This API
        /// call isn't compatible with [enhanced dataset
        /// metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).
        /// &gt;
        /// &gt; Instead use:
        /// &gt;
        /// &gt; - [Update
        /// Parameters](/rest/api/power-bi/datasets/update-parameters) to
        /// update connections for SQL, Azure Synapse, OData, and SharePoint
        /// data sources.
        /// &gt; - [Update
        /// Datasources](/rest/api/power-bi/datasets/update-datasources) to
        /// connections for other data sources.
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='parameters'>
        /// The body
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        [System.Obsolete()]
        Task<HttpOperationResponse> SetAllDatasetConnectionsWithHttpMessagesAsync(string datasetId, ConnectionDetails parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Binds the specified dataset from **My workspace** to the specified
        /// gateway, optionally with a given set of data source IDs. If you
        /// don't supply a specific data source ID, the dataset will be bound
        /// to the first matching data source in the gateway.
        /// </summary>
        /// <remarks>
        ///
        /// &gt; [!IMPORTANT]
        /// &gt; Add the API caller principal as a data source user on the
        /// gateway.
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// Only supports the on-premises data gateway
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='bindToGatewayRequest'>
        /// The bind to gateway request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> BindToGatewayWithHttpMessagesAsync(string datasetId, BindToGatewayRequest bindToGatewayRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of gateway data sources for the specified dataset
        /// from **My workspace**.
        /// </summary>
        /// <remarks>
        ///
        /// &gt; [!IMPORTANT]
        /// &gt; This API call is deprecated, use [Get
        /// Datasources](/rest/api/power-bi/datasets/get-datasources) instead.
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<GatewayDatasources>> GetGatewayDatasourcesWithHttpMessagesAsync(string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of gateways that the specified dataset from **My
        /// workspace** can be bound to.
        /// </summary>
        /// <remarks>
        ///
        /// This API call is only relevant to datasets that have at least one
        /// on-premises connection. For datasets with cloud-only connections,
        /// this API call returns an empty list.
        ///
        /// ## Required Scope
        ///
        /// Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Gateways>> DiscoverGatewaysWithHttpMessagesAsync(string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Grants the specified user's permissions to the specified dataset.
        /// </summary>
        /// <remarks>
        ///
        /// When user permissions to a dataset have been recently updated, the
        /// new permissions might not be immediately available through API
        /// calls. To refresh user permissions, use the [Refresh User
        /// Permissions](/rest/api/power-bi/users/refresh-user-permissions) API
        /// call.
        ///
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// ## Limitations
        ///
        /// - Only datasets in a [new workspace
        /// experience](/power-bi/collaborate-share/service-new-workspaces)
        /// workspace, that is to say a V2 workspace, are supported.
        /// - Adding permissions to service principals (app principalType)
        /// isn't supported
        /// - Caller must have ReadReshare permissions on the dataset.
        /// - This API call can't be used to grant dataset Write permission on
        /// the dataset
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='userDetails'>
        /// Details of user access right
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> PostDatasetUserInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, PostDatasetUserAccess userDetails, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the existing dataset permissions of the specified user to
        /// the specified permissions.
        /// </summary>
        /// <remarks>
        ///
        /// When user permissions to a dataset have been recently updated, the
        /// new permissions might not be immediately available through API
        /// calls. To refresh user permissions, use the [Refresh User
        /// Permissions](/rest/api/power-bi/users/refresh-user-permissions) API
        /// call.
        /// This API call can be used to remove all the dataset permissions of
        /// the specified user by using `datasetUserAccessRight: None`
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// ## Permissions
        ///
        /// The permissions for this API call are listed in [Datasets
        /// permissions](/power-bi/developer/embedded/datasets-permissions).
        /// ## Limitations
        ///
        /// - Only datasets in a [new workspace
        /// experience](/power-bi/collaborate-share/service-new-workspaces)
        /// workspace, that is to say a V2 workspace, are supported.
        /// - Updating permissions to service principals (app principalType)
        /// isn't supported
        /// - Caller must have ReadWriteReshare permissions on the dataset.
        /// That is, folder admins, members and contributors with Reshare
        /// permissions, or dataset owners.
        /// - This API can't be used to add or remove *write* permission.
        /// - This API can't be used to remove folder-level inherited
        /// permissions. For folder admins and members, the
        /// ReadWriteReshareExplore permission on the folder's datasets is
        /// inherited. For folder contributors, the ReadWriteExplore permission
        /// on the folder's datasets is inherited. For folder viewers, the Read
        /// permission on the folder's datasets is inherited.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='userDetails'>
        /// Details of user access right
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> PutDatasetUserInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, DatasetUserAccess userDetails, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of principals that have access to the specified
        /// dataset.
        /// </summary>
        /// <remarks>
        ///
        /// When user permissions to a dataset have been recently updated, the
        /// new permissions might not be immediately available through API
        /// calls. To refresh user permissions, use the [Refresh User
        /// Permissions](/rest/api/power-bi/users/refresh-user-permissions) API
        /// call.
        ///
        /// ## Permissions
        ///
        /// The permissions for this API call are listed in [Datasets
        /// permissions](/power-bi/developer/embedded/datasets-permissions).
        ///
        /// ## Required Scope
        ///
        /// Dataset.Read.All or Dataset.ReadWrite.All
        /// ## Limitations
        ///
        /// - Only datasets in a [new workspace
        /// experience](/power-bi/collaborate-share/service-new-workspaces)
        /// workspace, that is to say a V2 workspace are supported.
        /// - Caller must have ReadWriteReshare permissions on the dataset.
        /// That is, folder admins, members and contributors with Reshare
        /// permissions, or dataset owners.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<DatasetUsersAccess>> GetDatasetUsersInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Grants the specified user's permissions to the specified dataset.
        /// </summary>
        /// <remarks>
        ///
        /// When user permissions to a dataset have been recently updated, the
        /// new permissions might not be immediately available through API
        /// calls. To refresh user permissions, use the [Refresh User
        /// Permissions](/rest/api/power-bi/users/refresh-user-permissions) API
        /// call.
        ///
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// ## Limitations
        ///
        /// - Only datasets in a [new workspace
        /// experience](/power-bi/collaborate-share/service-new-workspaces)
        /// workspace, that is to say a V2 workspace, or **My workspace** are
        /// supported.
        /// - Adding permissions to service principals (app principalType)
        /// isn't supported
        /// - Caller must have ReadReshare permissions on the dataset.
        /// - This API call can't be used to grant dataset Write permission on
        /// the dataset
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='userDetails'>
        /// Details of user access right
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> PostDatasetUserWithHttpMessagesAsync(string datasetId, PostDatasetUserAccess userDetails, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the existing dataset permissions of the specified user to
        /// the specified permissions.
        /// </summary>
        /// <remarks>
        ///
        /// When user permissions to a dataset have been recently updated, the
        /// new permissions might not be immediately available through API
        /// calls. To refresh user permissions, use the [Refresh User
        /// Permissions](/rest/api/power-bi/users/refresh-user-permissions) API
        /// call.
        /// This API call can be used to remove all the dataset permissions of
        /// the specified user by using `datasetUserAccessRight: None`
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// ## Permissions
        ///
        /// The permissions for this API call are listed in [Datasets
        /// permissions](/power-bi/developer/embedded/datasets-permissions).
        ///
        /// ## Limitations
        ///
        /// - Only datasets in a [new workspace
        /// experience](/power-bi/collaborate-share/service-new-workspaces)
        /// workspace, that is to say a V2 workspace, or **My workspace** are
        /// supported.
        /// - Updating permissions to service principals (app principalType)
        /// isn't supported
        /// - Caller must have ReadWriteReshare permissions on the dataset.
        /// That is, folder admins, members and contributors with Reshare
        /// permissions, or dataset owners.
        /// - This API can't be used to add or remove *write* permission.
        /// - This API can't be used to remove folder-level inherited
        /// permissions. For folder admins and members, the
        /// ReadWriteReshareExplore permission on the folder's datasets is
        /// inherited. For folder contributors, the ReadWriteExplore permission
        /// on the folder's datasets is inherited. For folder viewers, the Read
        /// permission on the folder's datasets is inherited.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='userDetails'>
        /// Details of user access right
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> PutDatasetUserWithHttpMessagesAsync(string datasetId, DatasetUserAccess userDetails, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of principals that have access to the specified
        /// dataset.
        /// </summary>
        /// <remarks>
        ///
        /// When user permissions to a dataset have been recently updated, the
        /// new permissions might not be immediately available through API
        /// calls. To refresh user permissions, use the [Refresh User
        /// Permissions](/rest/api/power-bi/users/refresh-user-permissions) API
        /// call.
        ///
        /// ## Permissions
        ///
        /// The permissions for this API call are listed in [Datasets
        /// permissions](/power-bi/developer/embedded/datasets-permissions).
        ///
        /// ## Required Scope
        ///
        /// Dataset.Read.All or Dataset.ReadWrite.All
        /// ## Limitations
        ///
        /// - Only datasets in a [new workspace
        /// experience](/power-bi/collaborate-share/service-new-workspaces)
        /// workspace, that is to say a V2 workspace, or **My workspace** are
        /// supported.
        /// - Caller must have ReadWriteReshare permissions on the dataset.
        /// That is, folder admins, members and contributors with Reshare
        /// permissions, or dataset owners.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<DatasetUsersAccess>> GetDatasetUsersWithHttpMessagesAsync(string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of datasets from the specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<Datasets>> GetDatasetsInGroupWithHttpMessagesAsync(System.Guid groupId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new dataset in the specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// This API call only supports **push datasets**.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='dataset'>
        /// Create dataset parameters
        /// </param>
        /// <param name='defaultRetentionPolicy'>
        /// The default retention policy. Possible values include: 'None',
        /// 'basicFIFO'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Dataset>> PostDatasetInGroupWithHttpMessagesAsync(System.Guid groupId, CreateDatasetRequest dataset, DefaultRetentionPolicy? defaultRetentionPolicy = default(DefaultRetentionPolicy?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of upstream dataflows for datasets from the
        /// specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<DatasetToDataflowLinksResponse>> GetDatasetToDataflowsLinksInGroupWithHttpMessagesAsync(System.Guid groupId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns the specified dataset from the specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Dataset>> GetDatasetInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the properties for the specified dataset from the specified
        /// workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// The user must be the dataset owner.
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='updateDatasetRequest'>
        /// Update dataset request parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> UpdateDatasetInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, UpdateDatasetRequest updateDatasetRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes the specified dataset from the specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> DeleteDatasetInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of tables within the specified dataset from the
        /// specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// ## Limitations
        ///
        /// This API call only supports **push datasets**.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Tables>> GetTablesInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the metadata and schema for the specified table within the
        /// specified dataset from the specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// This API call only supports **push datasets**.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='tableName'>
        /// The table name
        /// </param>
        /// <param name='requestMessage'>
        /// The request message
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Table>> PutTableInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, string tableName, Table requestMessage, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Adds new data rows to the specified table within the specified
        /// dataset from the specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// - This API call only supports **push datasets**.
        /// - See [Power BI REST API
        /// limitations](/power-bi/developer/automation/api-rest-api-limitations).
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='tableName'>
        /// The table name
        /// </param>
        /// <param name='requestMessage'>
        /// The request message
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> PostRowsInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, string tableName, PostRowsRequest requestMessage, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes all rows from the specified table within the specified
        /// dataset from the specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// This API call only supports **push datasets**.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='tableName'>
        /// The table name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> DeleteRowsInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, string tableName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns the refresh history for the specified dataset from the
        /// specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        ///
        /// ## Limitations
        ///
        /// OneDrive refresh history isn't returned.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='top'>
        /// The requested number of entries in the refresh history. If not
        /// provided, the default is all available entries.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Refreshes>> GetRefreshHistoryInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, int? top = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Triggers a refresh for the specified dataset from the specified
        /// workspace. An [enhanced
        /// refresh](/power-bi/connect-data/asynchronous-refresh) is triggered
        /// only if a request payload other than `notifyOption` is set.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// - For Shared capacities, a maximum of eight requests per day,
        /// including refreshes executed by using scheduled refresh, can be
        /// initiated.
        /// - For Shared capacities, only `notifyOption` can be specified in
        /// the request body.
        /// - Enhanced refresh is not supported for shared capacities.
        /// - For enhanced refresh, `notifyOption` is not required and must be
        /// excluded from the request body. However, one or more parameters
        /// other than `notifyOption` are required.
        /// - For Premium capacities, the maximum requests per day is only
        /// limited by the available resources in the capacity. If available
        /// resources are overloaded, refreshes are throttled until the load is
        /// reduced. The refresh will fail if throttling exceeds 1 hour.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='datasetRefreshRequest'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<DatasetsRefreshDatasetInGroupHeaders>> RefreshDatasetInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, DatasetRefreshRequest datasetRefreshRequest = default(DatasetRefreshRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns execution details of an [enhanced refresh
        /// operation](/power-bi/connect-data/asynchronous-refresh) for the
        /// specified dataset from the specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='refreshId'>
        /// The refresh ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<DatasetRefreshDetail>> GetRefreshExecutionDetailsInGroupWithHttpMessagesAsync(System.Guid groupId, System.Guid datasetId, System.Guid refreshId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Cancels the specified [enhanced refresh
        /// operation](/power-bi/connect-data/asynchronous-refresh) for the
        /// specified dataset from the specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='refreshId'>
        /// The refresh ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        Task<HttpOperationResponse> CancelRefreshInGroupWithHttpMessagesAsync(System.Guid groupId, System.Guid datasetId, System.Guid refreshId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns the refresh schedule for the specified dataset from the
        /// specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<RefreshSchedule>> GetRefreshScheduleInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the refresh schedule for the specified dataset from the
        /// specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// A request that disables the refresh schedule should contain no
        /// other changes.
        ///
        /// At least one day must be specified. If no times are specified, then
        /// Power BI will use a default single time per day.
        ///
        /// ## Permissions
        ///
        /// - The user must be the dataset owner.
        /// - This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// The limit on the number of time slots per day depends on whether a
        /// [Premium](/power-bi/admin/service-premium-what-is) or Shared
        /// capacity is used.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='datasetModelRefreshScheduleRequest'>
        /// Update Refresh Schedule parameters, by specifying all or some of
        /// the parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> UpdateRefreshScheduleInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, RefreshScheduleRequest datasetModelRefreshScheduleRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns the refresh schedule for a specified
        /// [DirectQuery](/power-bi/connect-data/desktop-directquery-about) or
        /// [LiveConnection](/power-bi/connect-data/desktop-directquery-about#live-connections)
        /// dataset from the specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<DirectQueryRefreshSchedule>> GetDirectQueryRefreshScheduleInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the refresh schedule for a specified
        /// [DirectQuery](/power-bi/connect-data/desktop-directquery-about) or
        /// [LiveConnection](/power-bi/connect-data/desktop-directquery-about#live-connections)
        /// dataset from the specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// A request should contain either a set of days and times *or* a
        /// valid frequency, but not both. If you choose a set of days without
        /// specifying any times, then Power BI will use a default single time
        /// per day. Setting the frequency will automatically overwrite the
        /// days and times setting.
        ///
        /// ## Permissions
        ///
        /// - The user must be the dataset owner.
        /// - This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='datasetDQRefreshScheduleRequest'>
        /// Patch DirectQuery or LiveConnection Refresh Schedule parameters, by
        /// specifying all or some of the parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> UpdateDirectQueryRefreshScheduleInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, DirectQueryRefreshScheduleRequest datasetDQRefreshScheduleRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of parameters for the specified dataset from the
        /// specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.Read.All or Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// Datasets with SQL, Oracle, Teradata, and SAP HANA
        /// [DirectQuery](/power-bi/connect-data/desktop-directquery-about)
        /// connections aren't supported.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<MashupParameters>> GetParametersInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the parameters values for the specified dataset from the
        /// specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// &gt; [!NOTE]
        /// &gt; We recommend using [enhanced dataset
        /// metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata)
        /// with this API call.
        ///
        /// &gt; [!IMPORTANT]
        /// &gt;
        /// &gt; - If you're using **enhanced dataset metadata**, refresh the
        /// dataset to apply the new parameter values.
        /// &gt; - If you're not using **enhanced dataset metadata**, wait 30
        /// minutes for the update data sources operation to complete, and then
        /// refresh the dataset.
        ///
        /// ## Permissions
        ///
        /// - The user must be the dataset owner.
        /// - This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// - Datasets created using the public [XMLA
        /// endpoint](/power-bi/admin/service-premium-connect-tools) aren't
        /// supported. To make changes to those data sources, the admin must
        /// use the Azure Analysis Services client library for Tabular Object
        /// Model.
        /// - [DirectQuery](/power-bi/connect-data/desktop-directquery-about)
        /// connections are only supported with [enhanced dataset
        /// metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).
        /// - Datasets with Azure Analysis Services live connections aren't
        /// supported.
        /// - Maximum of 100 parameters per request.
        /// - All specified parameters must exist in the dataset.
        /// - Parameters values should be of the expected type.
        /// - The parameter list can't be empty or include duplicate
        /// parameters.
        /// - Parameters names are case-sensitive.
        /// - Parameter `IsRequired` must have a non-empty value.
        /// - The parameter types `Any` and `Binary` can't be updated.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// </param>
        /// <param name='updateMashupParametersRequest'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> UpdateParametersInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, UpdateMashupParametersRequest updateMashupParametersRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of data sources for the specified dataset from the
        /// specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Datasources>> GetDatasourcesInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the data sources of the specified dataset from the
        /// specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// &gt; [!NOTE]
        /// &gt; We recommend using [enhanced dataset
        /// metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata)
        /// with this API call.
        ///
        /// &gt; [!IMPORTANT]
        /// &gt;
        /// &gt; - The original data source and the new data source must have
        /// the exact same schema.
        /// &gt; - If you're using **enhanced dataset metadata**, refresh the
        /// dataset to get data from the new data sources.
        /// &gt; - If you're not using **enhanced dataset metadata**, wait 30
        /// minutes for the update data sources operation to complete, and then
        /// refresh the dataset.
        ///
        /// ## Permissions
        ///
        /// - The user must be the dataset owner.
        /// - This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// - Datasets created using the public [XMLA
        /// endpoint](/power-bi/admin/service-premium-connect-tools) aren't
        /// supported. To make changes to those data sources, the admin must
        /// use the Azure Analysis Services client library for Tabular Object
        /// Model.
        /// - Only these data sources are supported: SQL Server, Azure SQL
        /// Server, Azure Analysis Services, Azure Synapse, OData, SharePoint,
        /// Teradata, and SAP HANA. For other data sources, use the [Update
        /// Parameters In
        /// Group](/rest/api/power-bi/datasets/update-parameters-in-group) API
        /// call.
        /// - Changing the data source type isn't supported.
        /// - Data sources that contain parameters in the connection string
        /// aren't supported.
        /// - Updating data sources that are part of merged or joined tables is
        /// only supported if you're using [enhanced dataset
        /// metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).
        /// - For an Advanced Query that reference multiple data sources, only
        /// the first data source will be updated. To overcome this limitation,
        /// define the data source as a parameter and use the [Update
        /// Parameters In
        /// Group](/rest/api/power-bi/datasets/update-parameters-in-group) API
        /// call.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// </param>
        /// <param name='updateDatasourcesRequest'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> UpdateDatasourcesInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, UpdateDatasourcesRequest updateDatasourcesRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates all connections for the specified dataset from the
        /// specified workspace. This API call only supports SQL DirectQuery
        /// datasets.
        /// </summary>
        /// <remarks>
        ///
        /// &gt; [!IMPORTANT]
        /// &gt; This API call is deprecated and no longer supported. This API
        /// call isn't compatible with [enhanced dataset
        /// metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).
        /// &gt;
        /// &gt; Instead use:
        /// &gt;
        /// &gt; - [Update Parameters In
        /// Group](/rest/api/power-bi/datasets/update-parameters-in-group) to
        /// update connections for SQL, Azure Synapse, OData, and SharePoint
        /// data sources.
        /// &gt; - [Update Datasources In
        /// Group](/rest/api/power-bi/datasets/update-datasources-in-group) to
        /// connections for other data sources.
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// Supports SQL DirectQuery datasets.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='parameters'>
        /// The body
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        [System.Obsolete()]
        Task<HttpOperationResponse> SetAllDatasetConnectionsInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, ConnectionDetails parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Binds the specified dataset from the specified workspace to the
        /// specified gateway, optionally with a given set of data source IDs.
        /// If you don't supply a specific data source ID, the dataset will be
        /// bound to the first matching data source in the gateway.
        /// </summary>
        /// <remarks>
        ///
        /// &gt; [!IMPORTANT]
        /// &gt; Add the API caller principal as a data source user on the
        /// gateway.
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// Only supports the on-premises data gateway
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='bindToGatewayRequest'>
        /// The bind to gateway request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> BindToGatewayInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, BindToGatewayRequest bindToGatewayRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of gateway data sources for the specified dataset
        /// from the specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// &gt; [!IMPORTANT]
        /// &gt; This API call is deprecated, use [Get Datasources In
        /// Group](/rest/api/power-bi/datasets/get-datasources-in-group)
        /// instead.
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<GatewayDatasources>> GetGatewayDatasourcesInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of gateways that the specified dataset from the
        /// specified workspace can be bound to.
        /// </summary>
        /// <remarks>
        ///
        /// This API call is only relevant to datasets that have at least one
        /// on-premises connection. For datasets with cloud-only connections,
        /// this API call returns an empty list.
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Gateways>> DiscoverGatewaysInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Transfers ownership over the specified dataset to the current
        /// authorized user.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> TakeOverInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Executes Data Analysis Expressions (DAX) queries against the
        /// provided dataset. The dataset must reside in a [new workspace
        /// experience](/power-bi/collaborate-share/service-new-workspaces)
        /// workspace.
        /// </summary>
        /// <remarks>
        ///
        /// DAX query errors will result in:
        ///
        /// - A response error, such as `DAX query failure`.
        /// - A failure HTTP status code (400).
        ///
        /// A query that requests more than one table, or more than the allowed
        /// number of table rows, will result in:
        ///
        /// - Limited data being returned.
        /// - A response error, such as `More than one result table in a query`
        /// or `More than {allowed number} rows in a query result`.
        /// - A successful HTTP status code (200).
        ///
        /// Columns that are fully qualified in the query will be returned with
        /// a fully qualified name, for example, `MyTable[MyColumn]`. Columns
        /// that are renamed or created in the query will be returned within
        /// square bracket, for example, `[MyNewColumn]`.
        ///
        /// ## Permissions
        ///
        /// The user must have [Manage dataset access
        /// permissions](/power-bi/connect-data/service-datasets-manage-access-permissions).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        ///
        /// ## Limitations
        ///
        /// - Only datasets in a [new workspace
        /// experience](/power-bi/collaborate-share/service-new-workspaces)
        /// workspace, that is to say a **V2** workspace, are supported.
        /// - Datasets that are hosted in Azure Analysis Services or that have
        /// a live connection to an on-premises Azure Analysis Services model
        /// aren't supported.
        /// - The tenant setting **Dataset Execute Queries REST API**, found
        /// under **Integration settings**, must be enabled.
        /// - One query per API call.
        /// - One table request per query.
        /// - Maximum of 100,000 rows or 1,000,000 values per query (whichever
        /// is hit first). For example if you query for 5 columns, you can get
        /// back max 100,000 rows. If you query for 20 columns, you can get
        /// back max 50,000 rows (1 million divided by 20).
        /// - Maximum of 15MB of data per query. Once 15MB is exceeded, the
        /// current row will be completed but no additional rows will be
        /// written.
        /// - Maximum of 120 requests per user per minute. Target dataset does
        /// not impact this rate limit.
        /// - Service Principals aren't supported for datasets with RLS per
        /// [RLS
        /// limitations](/power-bi/admin/service-admin-rls#considerations-and-limitations)
        /// or with SSO enabled.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='requestMessage'>
        /// The request message
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<DatasetExecuteQueriesResponse>> ExecuteQueriesInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, DatasetExecuteQueriesRequest requestMessage, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Generates an embed token based on the specified dataset from the
        /// specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// &gt; [!NOTE]
        /// &gt; An embed token can be used to [embed
        /// Q&amp;A](/power-bi/developer/qanda) within your application.
        ///
        /// &gt; [!IMPORTANT]
        /// &gt; This API call is only relevant to the [embed for your
        /// customers](/power-bi/developer/embed-sample-for-customers)
        /// scenario. To learn more about using this API, see [Considerations
        /// when generating an embed
        /// token](/power-bi/developer/embedded/generate-embed-token).
        ///
        /// ## Permissions
        ///
        /// - When using a service principal for authentication, refer to
        /// [Embed Power BI content with service
        /// principal](/power-bi/developer/embed-service-principal) and
        /// [Considerations and
        /// limitations](/power-bi/developer/embedded/embed-service-principal#considerations-and-limitations).
        /// - This API call can be called by a service principal profile. For
        /// more information see: [Service principal profiles in Power BI
        /// Embedded](/power-bi/developer/embedded/embed-multi-tenancy).
        ///
        /// ## Required Scope
        ///
        /// Dataset.ReadWrite.All or Dataset.Read.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='requestParameters'>
        /// Generate token parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<EmbedToken>> GenerateTokenInGroupWithHttpMessagesAsync(System.Guid groupId, string datasetId, GenerateTokenRequest requestParameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of datasets for the organization.
        /// </summary>
        /// <remarks>
        ///
        /// Each request takes two seconds to process, during which time other
        /// requests are queued.
        ///
        /// ## Permissions
        ///
        /// - The user must have administrator rights (such as Office 365
        /// Global Administrator or Power BI Service Administrator) or
        /// authenticate using a service principal.
        /// - Delegated permissions are supported.
        ///
        /// ## Required Scope
        ///
        /// Tenant.Read.All or Tenant.ReadWrite.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='filter'>
        /// Filters the results, based on a boolean condition
        /// </param>
        /// <param name='top'>
        /// Returns only the first n results
        /// </param>
        /// <param name='skip'>
        /// Skips the first n results
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<AdminDatasets>> GetDatasetsAsAdminWithHttpMessagesAsync(string filter = default(string), int? top = default(int?), int? skip = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of data sources for the specified dataset.
        /// </summary>
        /// <remarks>
        ///
        /// Each request takes 0.5 seconds to process, during which time other
        /// requests are queued.
        ///
        /// ## Permissions
        ///
        /// - The user must have administrator rights (such as Office 365
        /// Global Administrator or Power BI Service Administrator) or
        /// authenticate using a service principal.
        /// - Delegated permissions are supported.
        ///
        /// ## Required Scope
        ///
        /// Tenant.Read.All or Tenant.ReadWrite.All
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Datasources>> GetDatasourcesAsAdminWithHttpMessagesAsync(string datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of users that have access to the specified dataset.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// - The user must have administrator rights (such as Office 365
        /// Global Administrator or Power BI Service Administrator) or
        /// authenticate using a service principal.
        /// - Delegated permissions are supported.
        /// - The permissions for this API call are listed in [Datasets
        /// permissions](/power-bi/developer/embedded/datasets-permissions).
        ///
        /// ## Required Scope
        ///
        /// Tenant.Read.All or Tenant.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// Maximum 200 requests per hour.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='datasetId'>
        /// The dataset ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<DatasetUsers>> GetDatasetUsersAsAdminWithHttpMessagesAsync(System.Guid datasetId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of datasets from the specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// - The user must have administrator rights (such as Office 365
        /// Global Administrator or Power BI Service Administrator) or
        /// authenticate using a service principal.
        /// - Delegated permissions are supported.
        ///
        /// ## Required Scope
        ///
        /// Tenant.Read.All or Tenant.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// Maximum 200 requests per hour.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='filter'>
        /// Filters the results, based on a boolean condition
        /// </param>
        /// <param name='top'>
        /// Returns only the first n results
        /// </param>
        /// <param name='skip'>
        /// Skips the first n results
        /// </param>
        /// <param name='expand'>
        /// Expands related entities inline
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<AdminDatasets>> GetDatasetsInGroupAsAdminWithHttpMessagesAsync(System.Guid groupId, string filter = default(string), int? top = default(int?), int? skip = default(int?), string expand = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns a list of upstream dataflows for datasets from the
        /// specified workspace.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// - The user must have administrator rights (such as Office 365
        /// Global Administrator or Power BI Service Administrator) or
        /// authenticate using a service principal.
        /// - Delegated permissions are supported.
        ///
        /// ## Required Scope
        ///
        /// Tenant.Read.All or Tenant.ReadWrite.All
        ///
        /// ## Limitations
        ///
        /// Maximum 200 requests per hour.
        /// &lt;br&gt;&lt;br&gt;
        /// </remarks>
        /// <param name='groupId'>
        /// The workspace ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<DatasetToDataflowLinksResponse>> GetDatasetToDataflowsLinksInGroupAsAdminWithHttpMessagesAsync(System.Guid groupId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
