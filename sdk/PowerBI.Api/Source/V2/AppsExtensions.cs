// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.V2
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Apps.
    /// </summary>
    public static partial class AppsExtensions
    {
            /// <summary>
            /// Returns a list of installed apps.
            /// </summary>
            /// <remarks>
            /// &lt;br/&gt;**Required scope**: App.Read.All&lt;br/&gt;To set the
            /// permissions scope, see [Register an
            /// app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static ODataResponseListApp GetApps(this IApps operations)
            {
                return operations.GetAppsAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns a list of installed apps.
            /// </summary>
            /// <remarks>
            /// &lt;br/&gt;**Required scope**: App.Read.All&lt;br/&gt;To set the
            /// permissions scope, see [Register an
            /// app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ODataResponseListApp> GetAppsAsync(this IApps operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAppsWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns the specified installed app.
            /// </summary>
            /// <remarks>
            /// &lt;br/&gt;**Required scope**: App.Read.All&lt;br/&gt;To set the
            /// permissions scope, see [Register an
            /// app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='appId'>
            /// The app id to get
            /// </param>
            public static App GetApp(this IApps operations, string appId)
            {
                return operations.GetAppAsync(appId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns the specified installed app.
            /// </summary>
            /// <remarks>
            /// &lt;br/&gt;**Required scope**: App.Read.All&lt;br/&gt;To set the
            /// permissions scope, see [Register an
            /// app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='appId'>
            /// The app id to get
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<App> GetAppAsync(this IApps operations, string appId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAppWithHttpMessagesAsync(appId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns a list of reports from the specified app.
            /// </summary>
            /// <remarks>
            /// &lt;br/&gt;**Required scope**: Report.ReadWrite.All or Report.Read.All
            /// &lt;br/&gt;To set the permissions scope, see [Register an
            /// app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='appId'>
            /// The app id
            /// </param>
            public static ODataResponseListReport GetReports(this IApps operations, string appId)
            {
                return operations.GetReportsAsync(appId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns a list of reports from the specified app.
            /// </summary>
            /// <remarks>
            /// &lt;br/&gt;**Required scope**: Report.ReadWrite.All or Report.Read.All
            /// &lt;br/&gt;To set the permissions scope, see [Register an
            /// app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='appId'>
            /// The app id
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ODataResponseListReport> GetReportsAsync(this IApps operations, string appId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetReportsWithHttpMessagesAsync(appId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns a list of dashboards from the specified app.
            /// </summary>
            /// <remarks>
            /// &lt;br/&gt;**Required scope**: Dashboard.ReadWrite.All or
            /// Dashboard.Read.All &lt;br/&gt;To set the permissions scope, see [Register
            /// an app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='appId'>
            /// The app id
            /// </param>
            public static ODataResponseListDashboard GetDashboards(this IApps operations, string appId)
            {
                return operations.GetDashboardsAsync(appId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns a list of dashboards from the specified app.
            /// </summary>
            /// <remarks>
            /// &lt;br/&gt;**Required scope**: Dashboard.ReadWrite.All or
            /// Dashboard.Read.All &lt;br/&gt;To set the permissions scope, see [Register
            /// an app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='appId'>
            /// The app id
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ODataResponseListDashboard> GetDashboardsAsync(this IApps operations, string appId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDashboardsWithHttpMessagesAsync(appId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
