// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.V2.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for EncryptionStatus.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(EncryptionStatusConverter))]
    public struct EncryptionStatus : System.IEquatable<EncryptionStatus>
    {
        private EncryptionStatus(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// Unable to determine state due to dataset corruption
        /// </summary>
        public static readonly EncryptionStatus Unknown = "Unknown";

        /// <summary>
        /// Encryption is not supported for this dataset
        /// </summary>
        public static readonly EncryptionStatus NotSupported = "NotSupported";

        /// <summary>
        /// Encryption is supported and is in sync with the encryption settings
        /// </summary>
        public static readonly EncryptionStatus InSyncWithWorkspace = "InSyncWithWorkspace";

        /// <summary>
        /// Encryption is supported and not in sync with the encryption
        /// settings
        /// </summary>
        public static readonly EncryptionStatus NotInSyncWithWorkspace = "NotInSyncWithWorkspace";


        /// <summary>
        /// Underlying value of enum EncryptionStatus
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for EncryptionStatus
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type EncryptionStatus
        /// </summary>
        public bool Equals(EncryptionStatus e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to EncryptionStatus
        /// </summary>
        public static implicit operator EncryptionStatus(string value)
        {
            return new EncryptionStatus(value);
        }

        /// <summary>
        /// Implicit operator to convert EncryptionStatus to string
        /// </summary>
        public static implicit operator string(EncryptionStatus e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum EncryptionStatus
        /// </summary>
        public static bool operator == (EncryptionStatus e1, EncryptionStatus e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum EncryptionStatus
        /// </summary>
        public static bool operator != (EncryptionStatus e1, EncryptionStatus e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for EncryptionStatus
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is EncryptionStatus && Equals((EncryptionStatus)obj);
        }

        /// <summary>
        /// Returns for hashCode EncryptionStatus
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
