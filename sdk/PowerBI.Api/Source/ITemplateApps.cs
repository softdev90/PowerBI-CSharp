// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// TemplateApps operations.
    /// </summary>
    public partial interface ITemplateApps
    {
        /// <summary>
        /// Generates an installation ticket for the [automated install
        /// flow](/power-bi/developer/template-apps/template-apps-auto-install)
        /// of the specified template app.
        /// </summary>
        /// <remarks>
        ///
        /// ## Permissions
        ///
        /// The caller must use service principal for authentication. For more
        /// information, see [Embed Power BI content with service
        /// principal](/power-bi/developer/embed-service-principal) and
        /// [Considerations and
        /// limitations](/power-bi/developer/embedded/embed-service-principal#considerations-and-limitations).
        ///
        /// ## Limitations
        ///
        /// - The tenant making this API call *must* own the specified template
        /// app.
        /// - The template app must either be published to Microsoft AppSource,
        /// or, both the ticket creator and the end-user installing with the
        /// ticket must have explicit access to the app.
        /// - All query parameters in the install ticket *must* be configured.
        ///
        /// ######
        ///
        /// </remarks>
        /// <param name='requestParameters'>
        /// Create Install Ticket parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<InstallTicket>> CreateInstallTicketWithHttpMessagesAsync(CreateInstallTicketRequest requestParameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
