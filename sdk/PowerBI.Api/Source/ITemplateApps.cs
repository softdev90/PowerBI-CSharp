// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// TemplateApps operations.
    /// </summary>
    public partial interface ITemplateApps
    {
        /// <summary>
        /// Generates an installation ticket for Template Apps automated
        /// install flow.
        /// </summary>
        /// <remarks>
        /// &lt;br/&gt;This API is only available when using service principal
        /// for authentication, see [Service Principal with Power
        /// BI](https://docs.microsoft.com/power-bi/developer/embed-service-principal)
        /// document along with considerations and limitations section.
        /// &lt;h2&gt;Restrictions&lt;/h2&gt;&lt;li&gt;Target App MUST be owned
        /// by the tenant calling this API.&lt;/li&gt;&lt;li&gt;Application
        /// must either be published to AppSource or have explicit access for
        /// both ticket creator &amp; end-user installing with
        /// ticket.&lt;/li&gt;&lt;li&gt;All query parameters MUST be configured
        /// in ticket.&lt;/li&gt;&lt;br/&gt;
        /// </remarks>
        /// <param name='requestParameters'>
        /// Create Install Ticket parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<InstallTicket>> CreateInstallTicketWithHttpMessagesAsync(CreateInstallTicketRequest requestParameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
