// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A Power BI goal value check-in
    /// </summary>
    public partial class GoalValue
    {
        /// <summary>
        /// Initializes a new instance of the GoalValue class.
        /// </summary>
        public GoalValue()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GoalValue class.
        /// </summary>
        /// <param name="timestamp">The UTC day timestamp (time part is 0) of
        /// the goal value check-in.</param>
        /// <param name="goalId">The goal ID</param>
        /// <param name="scorecardId">The scorecard ID</param>
        /// <param name="createdTime">The UTC time at creation</param>
        /// <param name="lastModifiedTime">The UTC time at last
        /// modification</param>
        /// <param name="value">The goal current value</param>
        /// <param name="target">The goal target value</param>
        /// <param name="valueDisplayString">The textual representation of the
        /// current goal value</param>
        /// <param name="targetDisplayString">The textual representation of the
        /// goal target</param>
        /// <param name="trend">The goal value trend</param>
        /// <param name="forecast">The goal value trend forecast</param>
        /// <param name="status">The ID of the goal status. 0 - 'Not started',
        /// 1 - 'On track', 2 - 'At risk', 3 - 'Behind', 4 - 'Overdue', 5 -
        /// 'Completed' .</param>
        /// <param name="notes">The notes for the goal.</param>
        public GoalValue(System.DateTime? timestamp = default(System.DateTime?), System.Guid? goalId = default(System.Guid?), System.Guid? scorecardId = default(System.Guid?), System.DateTime? createdTime = default(System.DateTime?), System.DateTime? lastModifiedTime = default(System.DateTime?), double? value = default(double?), double? target = default(double?), string valueDisplayString = default(string), string targetDisplayString = default(string), int? trend = default(int?), double? forecast = default(double?), int? status = default(int?), IList<GoalNote> notes = default(IList<GoalNote>))
        {
            Timestamp = timestamp;
            GoalId = goalId;
            ScorecardId = scorecardId;
            CreatedTime = createdTime;
            LastModifiedTime = lastModifiedTime;
            Value = value;
            Target = target;
            ValueDisplayString = valueDisplayString;
            TargetDisplayString = targetDisplayString;
            Trend = trend;
            Forecast = forecast;
            Status = status;
            Notes = notes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the UTC day timestamp (time part is 0) of the goal
        /// value check-in.
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime? Timestamp { get; set; }

        /// <summary>
        /// Gets or sets the goal ID
        /// </summary>
        [JsonProperty(PropertyName = "goalId")]
        public System.Guid? GoalId { get; set; }

        /// <summary>
        /// Gets or sets the scorecard ID
        /// </summary>
        [JsonProperty(PropertyName = "scorecardId")]
        public System.Guid? ScorecardId { get; set; }

        /// <summary>
        /// Gets or sets the UTC time at creation
        /// </summary>
        [JsonProperty(PropertyName = "createdTime")]
        public System.DateTime? CreatedTime { get; set; }

        /// <summary>
        /// Gets or sets the UTC time at last modification
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedTime")]
        public System.DateTime? LastModifiedTime { get; set; }

        /// <summary>
        /// Gets or sets the goal current value
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public double? Value { get; set; }

        /// <summary>
        /// Gets or sets the goal target value
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public double? Target { get; set; }

        /// <summary>
        /// Gets or sets the textual representation of the current goal value
        /// </summary>
        [JsonProperty(PropertyName = "valueDisplayString")]
        public string ValueDisplayString { get; set; }

        /// <summary>
        /// Gets or sets the textual representation of the goal target
        /// </summary>
        [JsonProperty(PropertyName = "targetDisplayString")]
        public string TargetDisplayString { get; set; }

        /// <summary>
        /// Gets or sets the goal value trend
        /// </summary>
        [JsonProperty(PropertyName = "trend")]
        public int? Trend { get; set; }

        /// <summary>
        /// Gets or sets the goal value trend forecast
        /// </summary>
        [JsonProperty(PropertyName = "forecast")]
        public double? Forecast { get; set; }

        /// <summary>
        /// Gets or sets the ID of the goal status. 0 - 'Not started', 1 - 'On
        /// track', 2 - 'At risk', 3 - 'Behind', 4 - 'Overdue', 5 - 'Completed'
        /// .
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public int? Status { get; set; }

        /// <summary>
        /// Gets or sets the notes for the goal.
        /// </summary>
        [JsonProperty(PropertyName = "notes")]
        public IList<GoalNote> Notes { get; set; }

    }
}
