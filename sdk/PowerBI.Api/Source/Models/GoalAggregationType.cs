// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for GoalAggregationType.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(GoalAggregationTypeConverter))]
    public struct GoalAggregationType : System.IEquatable<GoalAggregationType>
    {
        private GoalAggregationType(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// Information about the current value of the goal
        /// </summary>
        public static readonly GoalAggregationType Value = "Value";

        /// <summary>
        /// Information about the target value of the goal
        /// </summary>
        public static readonly GoalAggregationType Target = "Target";

        /// <summary>
        /// Information about the status of the goal
        /// </summary>
        public static readonly GoalAggregationType Status = "Status";

        /// <summary>
        /// Information about the sparkline
        /// </summary>
        public static readonly GoalAggregationType Sparkline = "Sparkline";

        /// <summary>
        /// Information about the change
        /// </summary>
        public static readonly GoalAggregationType Change = "Change";


        /// <summary>
        /// Underlying value of enum GoalAggregationType
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for GoalAggregationType
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type GoalAggregationType
        /// </summary>
        public bool Equals(GoalAggregationType e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to GoalAggregationType
        /// </summary>
        public static implicit operator GoalAggregationType(string value)
        {
            return new GoalAggregationType(value);
        }

        /// <summary>
        /// Implicit operator to convert GoalAggregationType to string
        /// </summary>
        public static implicit operator string(GoalAggregationType e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum GoalAggregationType
        /// </summary>
        public static bool operator == (GoalAggregationType e1, GoalAggregationType e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum GoalAggregationType
        /// </summary>
        public static bool operator != (GoalAggregationType e1, GoalAggregationType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for GoalAggregationType
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is GoalAggregationType && Equals((GoalAggregationType)obj);
        }

        /// <summary>
        /// Returns for hashCode GoalAggregationType
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
