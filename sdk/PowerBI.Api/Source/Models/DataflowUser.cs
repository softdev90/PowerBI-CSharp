// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A Power BI user access right entry for dataflow
    /// </summary>
    public partial class DataflowUser : User
    {
        /// <summary>
        /// Initializes a new instance of the DataflowUser class.
        /// </summary>
        public DataflowUser()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataflowUser class.
        /// </summary>
        /// <param name="emailAddress">Email address of the user</param>
        /// <param name="identifier">Identifier of the principal</param>
        /// <param name="principalType">Possible values include: 'None',
        /// 'User', 'Group', 'App'</param>
        /// <param name="displayName">Display name of the principal</param>
        /// <param name="graphId">Identifier of the principal in Microsoft
        /// Graph. Only available for admin APIs.</param>
        /// <param name="dataflowUserAccessRight">Access rights user has for
        /// the dataflow (Permission level). Possible values include: 'None',
        /// 'Read', 'ReadWrite', 'ReadReshare', 'Owner'</param>
        public DataflowUser(string emailAddress, string identifier, PrincipalType principalType, string displayName = default(string), string graphId = default(string), DataflowUserAccessRight? dataflowUserAccessRight = default(DataflowUserAccessRight?))
            : base(emailAddress, identifier, principalType, displayName, graphId)
        {
            DataflowUserAccessRight = dataflowUserAccessRight;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets access rights user has for the dataflow (Permission
        /// level). Possible values include: 'None', 'Read', 'ReadWrite',
        /// 'ReadReshare', 'Owner'
        /// </summary>
        [JsonProperty(PropertyName = "DataflowUserAccessRight")]
        public DataflowUserAccessRight? DataflowUserAccessRight { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
