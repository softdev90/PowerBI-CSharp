// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The Power BI data source connection details. See examples in [Get
    /// Datasources](/rest/api/power-bi/datasets/get-datasources#examples) or
    /// [Get Datasources In
    /// Group](/rest/api/power-bi/datasets/get-datasources-in-group#examples).
    /// </summary>
    public partial class DatasourceConnectionDetails
    {
        /// <summary>
        /// Initializes a new instance of the DatasourceConnectionDetails
        /// class.
        /// </summary>
        public DatasourceConnectionDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatasourceConnectionDetails
        /// class.
        /// </summary>
        /// <param name="server">The connection server</param>
        /// <param name="database">The connection database</param>
        /// <param name="url">The connection URL</param>
        /// <param name="path">The connection path</param>
        /// <param name="kind">The connection kind</param>
        /// <param name="account">The connection account</param>
        /// <param name="domain">The connection domain</param>
        /// <param name="emailAddress">The connection email address</param>
        /// <param name="loginServer">The connection login server</param>
        /// <param name="classInfo">The connection class information</param>
        public DatasourceConnectionDetails(string server = default(string), string database = default(string), string url = default(string), string path = default(string), string kind = default(string), string account = default(string), string domain = default(string), string emailAddress = default(string), string loginServer = default(string), string classInfo = default(string))
        {
            Server = server;
            Database = database;
            Url = url;
            Path = path;
            Kind = kind;
            Account = account;
            Domain = domain;
            EmailAddress = emailAddress;
            LoginServer = loginServer;
            ClassInfo = classInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the connection server
        /// </summary>
        [JsonProperty(PropertyName = "server")]
        public string Server { get; set; }

        /// <summary>
        /// Gets or sets the connection database
        /// </summary>
        [JsonProperty(PropertyName = "database")]
        public string Database { get; set; }

        /// <summary>
        /// Gets or sets the connection URL
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets the connection path
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets the connection kind
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets or sets the connection account
        /// </summary>
        [JsonProperty(PropertyName = "account")]
        public string Account { get; set; }

        /// <summary>
        /// Gets or sets the connection domain
        /// </summary>
        [JsonProperty(PropertyName = "domain")]
        public string Domain { get; set; }

        /// <summary>
        /// Gets or sets the connection email address
        /// </summary>
        [JsonProperty(PropertyName = "emailAddress")]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Gets or sets the connection login server
        /// </summary>
        [JsonProperty(PropertyName = "loginServer")]
        public string LoginServer { get; set; }

        /// <summary>
        /// Gets or sets the connection class information
        /// </summary>
        [JsonProperty(PropertyName = "classInfo")]
        public string ClassInfo { get; set; }

    }
}
