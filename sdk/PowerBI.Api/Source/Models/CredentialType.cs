// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for CredentialType.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(CredentialTypeConverter))]
    public struct CredentialType : System.IEquatable<CredentialType>
    {
        private CredentialType(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        public static readonly CredentialType Basic = "Basic";

        public static readonly CredentialType Windows = "Windows";

        public static readonly CredentialType Anonymous = "Anonymous";

        public static readonly CredentialType OAuth2 = "OAuth2";

        public static readonly CredentialType Key = "Key";


        /// <summary>
        /// Underlying value of enum CredentialType
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for CredentialType
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type CredentialType
        /// </summary>
        public bool Equals(CredentialType e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to CredentialType
        /// </summary>
        public static implicit operator CredentialType(string value)
        {
            return new CredentialType(value);
        }

        /// <summary>
        /// Implicit operator to convert CredentialType to string
        /// </summary>
        public static implicit operator string(CredentialType e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum CredentialType
        /// </summary>
        public static bool operator == (CredentialType e1, CredentialType e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum CredentialType
        /// </summary>
        public static bool operator != (CredentialType e1, CredentialType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for CredentialType
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is CredentialType && Equals((CredentialType)obj);
        }

        /// <summary>
        /// Returns for hashCode CredentialType
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
