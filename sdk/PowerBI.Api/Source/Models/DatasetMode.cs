// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for DatasetMode.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(DatasetModeConverter))]
    public struct DatasetMode : System.IEquatable<DatasetMode>
    {
        private DatasetMode(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// A dataset with a live connection to Azure Analysis Services
        /// </summary>
        public static readonly DatasetMode AsAzure = "AsAzure";

        /// <summary>
        /// A dataset with a live connection to on-premises Azure Analysis
        /// Services
        /// </summary>
        public static readonly DatasetMode AsOnPrem = "AsOnPrem";

        /// <summary>
        /// A dataset that allows programmatic access for pushing data into
        /// PowerBI
        /// </summary>
        public static readonly DatasetMode Push = "Push";

        /// <summary>
        /// A dataset that supports data streaming. For more information, see
        /// [Real-time streaming in Power
        /// BI](/power-bi/connect-data/service-real-time-streaming).
        /// </summary>
        public static readonly DatasetMode Streaming = "Streaming";

        /// <summary>
        /// A dataset that supports data streaming and allows programmatic
        /// access for pushing data into Power BI
        /// </summary>
        public static readonly DatasetMode PushStreaming = "PushStreaming";


        /// <summary>
        /// Underlying value of enum DatasetMode
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for DatasetMode
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type DatasetMode
        /// </summary>
        public bool Equals(DatasetMode e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to DatasetMode
        /// </summary>
        public static implicit operator DatasetMode(string value)
        {
            return new DatasetMode(value);
        }

        /// <summary>
        /// Implicit operator to convert DatasetMode to string
        /// </summary>
        public static implicit operator string(DatasetMode e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum DatasetMode
        /// </summary>
        public static bool operator == (DatasetMode e1, DatasetMode e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum DatasetMode
        /// </summary>
        public static bool operator != (DatasetMode e1, DatasetMode e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for DatasetMode
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is DatasetMode && Equals((DatasetMode)obj);
        }

        /// <summary>
        /// Returns for hashCode DatasetMode
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
