// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for SourceType.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(SourceTypeConverter))]
    public struct SourceType : System.IEquatable<SourceType>
    {
        private SourceType(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// Use an existing report as a source for updating the content of a
        /// target report.
        /// </summary>
        public static readonly SourceType ExistingReport = "ExistingReport";


        /// <summary>
        /// Underlying value of enum SourceType
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for SourceType
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type SourceType
        /// </summary>
        public bool Equals(SourceType e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to SourceType
        /// </summary>
        public static implicit operator SourceType(string value)
        {
            return new SourceType(value);
        }

        /// <summary>
        /// Implicit operator to convert SourceType to string
        /// </summary>
        public static implicit operator string(SourceType e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum SourceType
        /// </summary>
        public static bool operator == (SourceType e1, SourceType e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum SourceType
        /// </summary>
        public static bool operator != (SourceType e1, SourceType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for SourceType
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is SourceType && Equals((SourceType)obj);
        }

        /// <summary>
        /// Returns for hashCode SourceType
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
