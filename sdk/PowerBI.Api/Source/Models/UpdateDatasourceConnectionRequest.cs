// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Power BI dataset data source connection update request
    /// </summary>
    public partial class UpdateDatasourceConnectionRequest
    {
        /// <summary>
        /// Initializes a new instance of the UpdateDatasourceConnectionRequest
        /// class.
        /// </summary>
        public UpdateDatasourceConnectionRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdateDatasourceConnectionRequest
        /// class.
        /// </summary>
        /// <param name="connectionDetails">The target connection details of
        /// the updated data source</param>
        /// <param name="datasourceSelector">The connection details of the data
        /// source that needs update. This is mandatory when a dataset has more
        /// than one data source.</param>
        public UpdateDatasourceConnectionRequest(DatasourceConnectionDetails connectionDetails, Datasource datasourceSelector = default(Datasource))
        {
            ConnectionDetails = connectionDetails;
            DatasourceSelector = datasourceSelector;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the target connection details of the updated data
        /// source
        /// </summary>
        [JsonProperty(PropertyName = "connectionDetails")]
        public DatasourceConnectionDetails ConnectionDetails { get; set; }

        /// <summary>
        /// Gets or sets the connection details of the data source that needs
        /// update. This is mandatory when a dataset has more than one data
        /// source.
        /// </summary>
        [JsonProperty(PropertyName = "datasourceSelector")]
        public Datasource DatasourceSelector { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ConnectionDetails == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ConnectionDetails");
            }
        }
    }
}
