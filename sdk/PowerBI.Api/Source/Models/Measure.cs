// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A Power BI measure
    /// </summary>
    public partial class Measure
    {
        /// <summary>
        /// Initializes a new instance of the Measure class.
        /// </summary>
        public Measure()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Measure class.
        /// </summary>
        /// <param name="name">The measure name</param>
        /// <param name="expression">A valid DAX expression</param>
        /// <param name="formatString">(Optional) A string describing how the
        /// value should be formatted when it is displayed as specified in
        /// [FORMAT_STRING](https://docs.microsoft.com/analysis-services/multidimensional-models/mdx/mdx-cell-properties-format-string-contents)</param>
        /// <param name="description">(Optional) Measure description</param>
        /// <param name="isHidden">(Optional) Is measure hidden</param>
        public Measure(string name, string expression, string formatString = default(string), string description = default(string), bool? isHidden = default(bool?))
        {
            Name = name;
            Expression = expression;
            FormatString = formatString;
            Description = description;
            IsHidden = isHidden;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the measure name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets a valid DAX expression
        /// </summary>
        [JsonProperty(PropertyName = "expression")]
        public string Expression { get; set; }

        /// <summary>
        /// Gets or sets (Optional) A string describing how the value should be
        /// formatted when it is displayed as specified in
        /// [FORMAT_STRING](https://docs.microsoft.com/analysis-services/multidimensional-models/mdx/mdx-cell-properties-format-string-contents)
        /// </summary>
        [JsonProperty(PropertyName = "formatString")]
        public string FormatString { get; set; }

        /// <summary>
        /// Gets or sets (Optional) Measure description
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets (Optional) Is measure hidden
        /// </summary>
        [JsonProperty(PropertyName = "isHidden")]
        public bool? IsHidden { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Expression == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Expression");
            }
            if (Name != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(Name, "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]+$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "Name", "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]+$");
                }
            }
        }
    }
}
