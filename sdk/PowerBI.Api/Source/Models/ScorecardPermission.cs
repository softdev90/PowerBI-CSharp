// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for ScorecardPermission.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(ScorecardPermissionConverter))]
    public struct ScorecardPermission : System.IEquatable<ScorecardPermission>
    {
        private ScorecardPermission(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// No access
        /// </summary>
        public static readonly ScorecardPermission None = "None";

        /// <summary>
        /// Read access
        /// </summary>
        public static readonly ScorecardPermission Read = "Read";

        /// <summary>
        /// Write access
        /// </summary>
        public static readonly ScorecardPermission Write = "Write";

        /// <summary>
        /// Read and Write access
        /// </summary>
        public static readonly ScorecardPermission ReadWrite = "ReadWrite";


        /// <summary>
        /// Underlying value of enum ScorecardPermission
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for ScorecardPermission
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type ScorecardPermission
        /// </summary>
        public bool Equals(ScorecardPermission e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to ScorecardPermission
        /// </summary>
        public static implicit operator ScorecardPermission(string value)
        {
            return new ScorecardPermission(value);
        }

        /// <summary>
        /// Implicit operator to convert ScorecardPermission to string
        /// </summary>
        public static implicit operator string(ScorecardPermission e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum ScorecardPermission
        /// </summary>
        public static bool operator == (ScorecardPermission e1, ScorecardPermission e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum ScorecardPermission
        /// </summary>
        public static bool operator != (ScorecardPermission e1, ScorecardPermission e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for ScorecardPermission
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is ScorecardPermission && Equals((ScorecardPermission)obj);
        }

        /// <summary>
        /// Returns for hashCode ScorecardPermission
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
