// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Patch workload setting request
    /// </summary>
    public partial class PatchWorkloadRequest
    {
        /// <summary>
        /// Initializes a new instance of the PatchWorkloadRequest class.
        /// </summary>
        public PatchWorkloadRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PatchWorkloadRequest class.
        /// </summary>
        /// <param name="state">Possible values include: 'Disabled', 'Enabled',
        /// 'Unsupported'</param>
        /// <param name="maxMemoryPercentageSetByUser">The percentage of the
        /// maximum memory that a workload can consume (set by the
        /// user)</param>
        public PatchWorkloadRequest(WorkloadState state, int? maxMemoryPercentageSetByUser = default(int?))
        {
            State = state;
            MaxMemoryPercentageSetByUser = maxMemoryPercentageSetByUser;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Disabled', 'Enabled',
        /// 'Unsupported'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public WorkloadState State { get; set; }

        /// <summary>
        /// Gets or sets the percentage of the maximum memory that a workload
        /// can consume (set by the user)
        /// </summary>
        [JsonProperty(PropertyName = "maxMemoryPercentageSetByUser")]
        public int? MaxMemoryPercentageSetByUser { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
