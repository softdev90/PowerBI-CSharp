// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class GroupAdminProperties
    {
        /// <summary>
        /// Initializes a new instance of the GroupAdminProperties class.
        /// </summary>
        public GroupAdminProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GroupAdminProperties class.
        /// </summary>
        /// <param name="description">The group description</param>
        /// <param name="type">The type of group</param>
        /// <param name="state">The group state</param>
        /// <param name="users">(Empty value) The users that belong to the
        /// group and their access rights. This property will be removed from
        /// the payload response in an upcoming release. You can retrieve user
        /// information on a Power BI item (such as a report or a dashboard) by
        /// using the [Get Group Users As
        /// Admin](/rest/api/power-bi/admin/groups-get-group-users-as-admin)
        /// API call, or the
        /// [PostWorkspaceInfo](/rest/api/power-bi/admin/workspace-info-post-workspace-info)
        /// API call with the `getArtifactUsers` parameter.</param>
        /// <param name="reports">The reports that belong to the group</param>
        /// <param name="dashboards">The dashboards that belong to the
        /// group</param>
        /// <param name="datasets">The datasets that belong to the
        /// group</param>
        /// <param name="dataflows">The dataflows that belong to the
        /// group</param>
        /// <param name="workbooks">The workbooks that belong to the
        /// group</param>
        /// <param name="pipelineId">The deployment pipeline ID that the
        /// workspace is assigned to.</param>
        /// <param name="hasWorkspaceLevelSettings">Whether the workspace has
        /// custom settings</param>
        public GroupAdminProperties(string description = default(string), string type = default(string), string state = default(string), IList<GroupUser> users = default(IList<GroupUser>), IList<AdminReport> reports = default(IList<AdminReport>), IList<AdminDashboard> dashboards = default(IList<AdminDashboard>), IList<AdminDataset> datasets = default(IList<AdminDataset>), IList<AdminDataflow> dataflows = default(IList<AdminDataflow>), IList<Workbook> workbooks = default(IList<Workbook>), System.Guid? pipelineId = default(System.Guid?), bool? hasWorkspaceLevelSettings = default(bool?))
        {
            Description = description;
            Type = type;
            State = state;
            Users = users;
            Reports = reports;
            Dashboards = dashboards;
            Datasets = datasets;
            Dataflows = dataflows;
            Workbooks = workbooks;
            PipelineId = pipelineId;
            HasWorkspaceLevelSettings = hasWorkspaceLevelSettings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the group description
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the type of group
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the group state
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets (Empty value) The users that belong to the group and
        /// their access rights. This property will be removed from the payload
        /// response in an upcoming release. You can retrieve user information
        /// on a Power BI item (such as a report or a dashboard) by using the
        /// [Get Group Users As
        /// Admin](/rest/api/power-bi/admin/groups-get-group-users-as-admin)
        /// API call, or the
        /// [PostWorkspaceInfo](/rest/api/power-bi/admin/workspace-info-post-workspace-info)
        /// API call with the `getArtifactUsers` parameter.
        /// </summary>
        [JsonProperty(PropertyName = "users")]
        public IList<GroupUser> Users { get; set; }

        /// <summary>
        /// Gets or sets the reports that belong to the group
        /// </summary>
        [JsonProperty(PropertyName = "reports")]
        public IList<AdminReport> Reports { get; set; }

        /// <summary>
        /// Gets or sets the dashboards that belong to the group
        /// </summary>
        [JsonProperty(PropertyName = "dashboards")]
        public IList<AdminDashboard> Dashboards { get; set; }

        /// <summary>
        /// Gets or sets the datasets that belong to the group
        /// </summary>
        [JsonProperty(PropertyName = "datasets")]
        public IList<AdminDataset> Datasets { get; set; }

        /// <summary>
        /// Gets or sets the dataflows that belong to the group
        /// </summary>
        [JsonProperty(PropertyName = "dataflows")]
        public IList<AdminDataflow> Dataflows { get; set; }

        /// <summary>
        /// Gets or sets the workbooks that belong to the group
        /// </summary>
        [JsonProperty(PropertyName = "workbooks")]
        public IList<Workbook> Workbooks { get; set; }

        /// <summary>
        /// Gets or sets the deployment pipeline ID that the workspace is
        /// assigned to.
        /// </summary>
        [JsonProperty(PropertyName = "pipelineId")]
        public System.Guid? PipelineId { get; set; }

        /// <summary>
        /// Gets or sets whether the workspace has custom settings
        /// </summary>
        [JsonProperty(PropertyName = "hasWorkspaceLevelSettings")]
        public bool? HasWorkspaceLevelSettings { get; set; }

    }
}
