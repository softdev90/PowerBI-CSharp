// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Paginated report Export to file configuration
    /// </summary>
    public partial class PaginatedReportExportConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the
        /// PaginatedReportExportConfiguration class.
        /// </summary>
        public PaginatedReportExportConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// PaginatedReportExportConfiguration class.
        /// </summary>
        /// <param name="identities">List of identities to use for RLS
        /// rules</param>
        /// <param name="formatSettings">Disctionary of format settings</param>
        /// <param name="parameterValues">List of report parameters</param>
        public PaginatedReportExportConfiguration(IList<EffectiveIdentity> identities = default(IList<EffectiveIdentity>), IDictionary<string, string> formatSettings = default(IDictionary<string, string>), IList<ParameterValue> parameterValues = default(IList<ParameterValue>))
        {
            Identities = identities;
            FormatSettings = formatSettings;
            ParameterValues = parameterValues;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of identities to use for RLS rules
        /// </summary>
        [JsonProperty(PropertyName = "identities")]
        public IList<EffectiveIdentity> Identities { get; set; }

        /// <summary>
        /// Gets or sets disctionary of format settings
        /// </summary>
        [JsonProperty(PropertyName = "formatSettings")]
        public IDictionary<string, string> FormatSettings { get; set; }

        /// <summary>
        /// Gets or sets list of report parameters
        /// </summary>
        [JsonProperty(PropertyName = "parameterValues")]
        public IList<ParameterValue> ParameterValues { get; set; }

    }
}
